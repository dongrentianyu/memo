[
    {
        "created": "20230926010148000",
        "creator": "马不前",
        "title": "λ:/thoughts-memo-translation-main/andy/note/Focused software development work is self-abnegating",
        "text": "# 专注的软件开发工作是自我否定的\r\n\r\n原文：[Focused software development work is self-abnegating (andymatuschak.org)](https://notes.andymatuschak.org/z5XqtTcnfBVUBRVFjxY2S1MqAAJDpE2ffyuZZ)\r\n\r\n当我沉浸到软件开发中，日常处于心流状态时，我的思维会缩小到一种隧道视野，完全固定在软件系统和它们的问题上。这是设计中的一个典型问题（Cooper, 2004）：工程师通常会成为糟糕的设计师，因为他们专注于他们的软件和代码逻辑里的各种边际条件，而不是整体设计上要解决的实际人类问题。对于研究来说，这实际上也是一个困扰（[深度软件开发的心理状态和深度研究思维是相互排斥的](https://notes.andymatuschak.org/zQCSSBGrBJazfq3tuJehkf81MsYj6du38Dof)）。虽然进入了心流，但我发现这种效果在个人层面上越来越令人不快。当我处于这种状态时，我感到自我意识在萎缩、变得缺乏反思、创造性的想法不再出现、感到写作困难等等。\r\n\r\n我不太清楚该如何处理这个问题。我可以通过每天在工程上花费更少的时间来避免这种影响，但这样就很难形成动力（[软件开发和研究思维之间的转换成本很高](https://notes.andymatuschak.org/z78pmtn8LMt6npZyHciSjVZJdp3u7sin61PzG)）。当工程是我的主要工作时，这并没有真正困扰我。因此，也许严肃的工程工作最好留给那些不介意这种影响的人。\r\n\r\nDavid Chapman [暗示](https://twitter.com/Meaningness/status/1317663971386613765)这可能部分是因为：\r\n\r\n> 我想在常规的编程中——可能对我们俩来说，所有的编程都是常规的——一个人没有添加任何自己的东西，只是弄清楚把 API 粘在一起的繁琐要求，这都是以他人的 API 为中心的。而在创造性的工作中，即使你沉浸在其中，也有一种感觉，即至少材料是通过你产生来的，而不是从 IDE/服务器/API 文档「那里」来的。并且我有一种感觉，即使上述材料是很普通的那种代码——所以「我」并没有创造它——但由于它是通过我产生出来的，所以即使我不是有意的，它也将会以一种我的方式变得独有。\r\n\r\n## 参考文献\r\n\r\nCooper, A. (2004). *The Inmates Are Running the Asylum: Why High Tech Products Drive Us Crazy and How to Restore the Sanity* (1st Edition). Sams - Pearson Education.",
        "type": "text/markdown",
        "caption": " 专注的软件开发工作是自我否定的\r",
        "modified": "20230930171250221",
        "modifier": "马不前",
        "obvault": "thoughts-memo-translation-main",
        "original-title": "Focused software development work is self-abnegating"
    }
]